global
	maxconn 80000
	chroot /usr/local/haproxy
	user       root
        group      root
	daemon
	nbproc 1
	pidfile /var/run/haproxy.pid
	log 127.0.0.1 local3 info
        stats socket /var/run/haproxy.sock mode  600 level admin
	stats timeout 2m
defaults
        option  redispatch
        option  httplog
        option  httpclose
        retries                 3
        option                  dontlognull
	maxconn 100000
	mode http
        log   global
        timeout http-request    30000
        timeout http-keep-alive 30000
	timeout connect 300000
	timeout client 300000
 	timeout server 300000
listen stats
	mode http
	bind 0.0.0.0:8888
	stats enable
	stats uri /haproxy-status
	stats auth haproxy:saltstack
##################### L4 #################################################
#kube-apiserver
frontend kube-apiserver-api
        bind 0.0.0.0:6443   #bind vip
        mode tcp
        default_backend   kube-apiserver

backend kube-apiserver
        mode tcp
        balance roundrobin
        server 192.168.56.11 192.168.56.11:6443 check  inter 2000 rise 15 fall 3
        server 192.168.56.17 192.168.56.17:6443 check  inter 2000 rise 15 fall 3
        server 192.168.56.18 192.168.56.18:6443 check  inter 2000 rise 15 fall 3


############# default ##################################################################
#frontend frontend_all_80
#        bind *:80    #bind vip
#        mode http
#        option httplog
#        log global
# acl策略配置 
#	acl acl_dfs_api hdr_reg(host) -i ^(dfs-api.busonline.com)$
# acl策略匹配相应 backend
#	use_backend dfs_api if acl_dfs_api
########### default ####################################################################

#backend dfs_api
#	option forwardfor header X-REAL-IP
#	option httpchk HEAD / HTTP/1.0
#	balance roundrobin
#	server web-node1 192.168.4.101:60000 check inter 2000 rise 15 fall 3
#	server web-node2 192.168.4.102:60000 check inter 2000 rise 15 fall 3
